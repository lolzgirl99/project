--In these examples, the generic rank should be 3 (this is the jacobian of some non-normal variety), but there should be

--------------------------
---**Example #0**---------
--------------------------

 T = ZZ/101[x1,x2,x3,x4,x5,x6,x7];
 I =  ideal(x5*x6-x4*x7,x1*x6-x2*x7,x5^2-x1*x7,x4*x5-x2*x7,x4^2-x2*x6,x1*x4-x2*
      x5,x2*x3^3*x5+3*x2*x3^2*x7+8*x2^2*x5+3*x3*x4*x7-8*x4*x7+x6*x7,x1*x3^3*x5+
      3*x1*x3^2*x7+8*x1*x2*x5+3*x3*x5*x7-8*x5*x7+x7^2,x2*x3^3*x4+3*x2*x3^2*x6+8
      *x2^2*x4+3*x3*x4*x6-8*x4*x6+x6^2,x2^2*x3^3+3*x2*x3^2*x4+8*x2^3+3*x2*x3*x6
      -8*x2*x6+x4*x6,x1*x2*x3^3+3*x2*x3^2*x5+8*x1*x2^2+3*x2*x3*x7-8*x2*x7+x4*x7
      ,x1^2*x3^3+3*x1*x3^2*x5+8*x1^2*x2+3*x1*x3*x7-8*x1*x7+x5*x7);
jac = matrix {{0, x6, -x7, 0, 0, x4, 0, x3^3*x5+3*x3^2*x7+8*x2*x5, 0, 0,
      x2*x3^3+8*x2^2, 2*x1*x3^3+3*x3^2*x5+16*x1*x2+3*x3*x7-8*x7}, {0, -x7, 0,
      -x7, -x6, -x5, x3^3*x5+3*x3^2*x7+16*x2*x5, 8*x1*x5,
      x3^3*x4+3*x3^2*x6+16*x2*x4, 2*x2*x3^3+3*x3^2*x4+24*x2^2+3*x3*x6-8*x6,
      x1*x3^3+3*x3^2*x5+16*x1*x2+3*x3*x7-8*x7, 8*x1^2}, {0, 0, 0, 0, 0, 0,
      3*x2*x3^2*x5+6*x2*x3*x7+3*x4*x7, 3*x1*x3^2*x5+6*x1*x3*x7+3*x5*x7,
      3*x2*x3^2*x4+6*x2*x3*x6+3*x4*x6, 3*x2^2*x3^2+6*x2*x3*x4+3*x2*x6,
      3*x1*x2*x3^2+6*x2*x3*x5+3*x2*x7, 3*x1^2*x3^2+6*x1*x3*x5+3*x1*x7}, {-x7,
      0, 0, x5, 2*x4, x1, 3*x3*x7-8*x7, 0, x2*x3^3+8*x2^2+3*x3*x6-8*x6,
      3*x2*x3^2+x6, x7, 0}, {x6, 0, 2*x5, x4, 0, -x2, x2*x3^3+8*x2^2,
      x1*x3^3+8*x1*x2+3*x3*x7-8*x7, 0, 0, 3*x2*x3^2, 3*x1*x3^2+x7}, {x5, x1, 0,
      0, -x2, 0, x7, 0, 3*x2*x3^2+3*x3*x4-8*x4+2*x6, 3*x2*x3-8*x2+x4, 0, 0},
      {-x4, -x2, -x1, -x2, 0, 0, 3*x2*x3^2+3*x3*x4-8*x4+x6,
      3*x1*x3^2+3*x3*x5-8*x5+2*x7, 0, 0, 3*x2*x3-8*x2+x4, 3*x1*x3-8*x1+x5}}


--------------------------
---**Example #1**---------
--------------------------

 T = ZZ/101[x1,x2,x3,x4,x5,x6,x7,x8];

 I =  ideal(x7^2-x6*x8,x6*x7-x5*x8,x5*x7-x4*x8,x4*x7-x1*x8,x6^2-x4*x8,x5*x6-x1*
      x8,x4*x6-x1*x7,x5^2-x1*x7,x4*x5-x1*x6,x4^2-x1*x5,x1*x2^3*x3*x8-2*x1*x2^2*
      x3^2*x8+x1*x2*x3^3*x8-x2^2*x3^2*x4*x8+x2*x3^3*x4*x8+x2^3*x4*x8-3*x2^2*x3*
      x4*x8+x2*x3^2*x4*x8+x3^3*x4*x8-2*x2^2*x3*x5*x8+2*x2*x3^2*x5*x8+x3^3*x5*x8
      -x2^2*x5*x8-x2*x3*x5*x8+3*x3^2*x5*x8-x2^2*x6*x8+x2*x3*x6*x8+3*x3^2*x6*x8+
      x1^2*x7-x2*x6*x8+3*x3*x6*x8+3*x3*x7*x8+x7*x8+x8^2,x1*x2^3*x3*x7-2*x1*x2^2
      *x3^2*x7+x1*x2*x3^3*x7-x1*x2^2*x3^2*x8+x1*x2*x3^3*x8+x1*x2^3*x8-3*x1*x2^2
      *x3*x8+x1*x2*x3^2*x8+x1*x3^3*x8-2*x2^2*x3*x4*x8+2*x2*x3^2*x4*x8+x3^3*x4*
      x8-x2^2*x4*x8-x2*x3*x4*x8+3*x3^2*x4*x8-x2^2*x5*x8+x2*x3*x5*x8+3*x3^2*x5*
      x8+x1^2*x6-x2*x5*x8+3*x3*x5*x8+3*x3*x6*x8+x6*x8+x7*x8,x1*x2^3*x3*x6-2*x1*
      x2^2*x3^2*x6+x1*x2*x3^3*x6-x1*x2^2*x3^2*x7+x1*x2*x3^3*x7+x1*x2^3*x7-3*x1*
      x2^2*x3*x7+x1*x2*x3^2*x7+x1*x3^3*x7-2*x1*x2^2*x3*x8+2*x1*x2*x3^2*x8+x1*x3
      ^3*x8-x1*x2^2*x8-x1*x2*x3*x8+3*x1*x3^2*x8-x2^2*x4*x8+x2*x3*x4*x8+3*x3^2*
      x4*x8+x1^2*x5-x2*x4*x8+3*x3*x4*x8+3*x3*x5*x8+x5*x8+x6*x8,x1*x2^3*x3*x5-2*
      x1*x2^2*x3^2*x5+x1*x2*x3^3*x5-x1*x2^2*x3^2*x6+x1*x2*x3^3*x6+x1*x2^3*x6-3*
      x1*x2^2*x3*x6+x1*x2*x3^2*x6+x1*x3^3*x6-2*x1*x2^2*x3*x7+2*x1*x2*x3^2*x7+x1
      *x3^3*x7-x1*x2^2*x7-x1*x2*x3*x7+3*x1*x3^2*x7-x1*x2^2*x8+x1*x2*x3*x8+3*x1*
      x3^2*x8+x1^2*x4-x1*x2*x8+3*x1*x3*x8+3*x3*x4*x8+x4*x8+x5*x8,x1*x2^3*x3*x4-
      2*x1*x2^2*x3^2*x4+x1*x2*x3^3*x4-x1*x2^2*x3^2*x5+x1*x2*x3^3*x5+x1*x2^3*x5-
      3*x1*x2^2*x3*x5+x1*x2*x3^2*x5+x1*x3^3*x5-2*x1*x2^2*x3*x6+2*x1*x2*x3^2*x6+
      x1*x3^3*x6-x1*x2^2*x6-x1*x2*x3*x6+3*x1*x3^2*x6-x1*x2^2*x7+x1*x2*x3*x7+3*
      x1*x3^2*x7+x1^3-x1*x2*x7+3*x1*x3*x7+3*x1*x3*x8+x1*x8+x4*x8);

 matrix {{0, 0, 0, -x8, 0, -x8, -x7, -x7, -x6, -x5,
      x2^3*x3*x8-2*x2^2*x3^2*x8+x2*x3^3*x8+2*x1*x7,
      x2^3*x3*x7-2*x2^2*x3^2*x7+x2*x3^3*x7-x2^2*x3^2*x8+x2*x3^3*x8+x2^3*x8-3*x2
      ^2*x3*x8+x2*x3^2*x8+x3^3*x8+2*x1*x6,
      x2^3*x3*x6-2*x2^2*x3^2*x6+x2*x3^3*x6-x2^2*x3^2*x7+x2*x3^3*x7+x2^3*x7-3*x2
      ^2*x3*x7+x2*x3^2*x7+x3^3*x7-2*x2^2*x3*x8+2*x2*x3^2*x8+x3^3*x8-x2^2*x8-x2*
      x3*x8+3*x3^2*x8+2*x1*x5,
      x2^3*x3*x5-2*x2^2*x3^2*x5+x2*x3^3*x5-x2^2*x3^2*x6+x2*x3^3*x6+x2^3*x6-3*x2
      ^2*x3*x6+x2*x3^2*x6+x3^3*x6-2*x2^2*x3*x7+2*x2*x3^2*x7+x3^3*x7-x2^2*x7-x2*
      x3*x7+3*x3^2*x7-x2^2*x8+x2*x3*x8+3*x3^2*x8+2*x1*x4-x2*x8+3*x3*x8,
      x2^3*x3*x4-2*x2^2*x3^2*x4+x2*x3^3*x4-x2^2*x3^2*x5+x2*x3^3*x5+x2^3*x5-3*x2
      ^2*x3*x5+x2*x3^2*x5+x3^3*x5-2*x2^2*x3*x6+2*x2*x3^2*x6+x3^3*x6-x2^2*x6-x2*
      x3*x6+3*x3^2*x6-x2^2*x7+x2*x3*x7+3*x3^2*x7+3*x1^2-x2*x7+3*x3*x7+3*x3*x8+
      x8}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      3*x1*x2^2*x3*x8-4*x1*x2*x3^2*x8+x1*x3^3*x8-2*x2*x3^2*x4*x8+x3^3*x4*x8+3*
      x2^2*x4*x8-6*x2*x3*x4*x8+x3^2*x4*x8-4*x2*x3*x5*x8+2*x3^2*x5*x8-2*x2*x5*x8
      -x3*x5*x8-2*x2*x6*x8+x3*x6*x8-x6*x8,
      3*x1*x2^2*x3*x7-4*x1*x2*x3^2*x7+x1*x3^3*x7-2*x1*x2*x3^2*x8+x1*x3^3*x8+3*
      x1*x2^2*x8-6*x1*x2*x3*x8+x1*x3^2*x8-4*x2*x3*x4*x8+2*x3^2*x4*x8-2*x2*x4*x8
      -x3*x4*x8-2*x2*x5*x8+x3*x5*x8-x5*x8,
      3*x1*x2^2*x3*x6-4*x1*x2*x3^2*x6+x1*x3^3*x6-2*x1*x2*x3^2*x7+x1*x3^3*x7+3*
      x1*x2^2*x7-6*x1*x2*x3*x7+x1*x3^2*x7-4*x1*x2*x3*x8+2*x1*x3^2*x8-2*x1*x2*x8
      -x1*x3*x8-2*x2*x4*x8+x3*x4*x8-x4*x8,
      3*x1*x2^2*x3*x5-4*x1*x2*x3^2*x5+x1*x3^3*x5-2*x1*x2*x3^2*x6+x1*x3^3*x6+3*
      x1*x2^2*x6-6*x1*x2*x3*x6+x1*x3^2*x6-4*x1*x2*x3*x7+2*x1*x3^2*x7-2*x1*x2*x7
      -x1*x3*x7-2*x1*x2*x8+x1*x3*x8-x1*x8,
      3*x1*x2^2*x3*x4-4*x1*x2*x3^2*x4+x1*x3^3*x4-2*x1*x2*x3^2*x5+x1*x3^3*x5+3*
      x1*x2^2*x5-6*x1*x2*x3*x5+x1*x3^2*x5-4*x1*x2*x3*x6+2*x1*x3^2*x6-2*x1*x2*x6
      -x1*x3*x6-2*x1*x2*x7+x1*x3*x7-x1*x7}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      x1*x2^3*x8-4*x1*x2^2*x3*x8+3*x1*x2*x3^2*x8-2*x2^2*x3*x4*x8+3*x2*x3^2*x4*
      x8-3*x2^2*x4*x8+2*x2*x3*x4*x8+3*x3^2*x4*x8-2*x2^2*x5*x8+4*x2*x3*x5*x8+3*
      x3^2*x5*x8-x2*x5*x8+6*x3*x5*x8+x2*x6*x8+6*x3*x6*x8+3*x6*x8+3*x7*x8,
      x1*x2^3*x7-4*x1*x2^2*x3*x7+3*x1*x2*x3^2*x7-2*x1*x2^2*x3*x8+3*x1*x2*x3^2*
      x8-3*x1*x2^2*x8+2*x1*x2*x3*x8+3*x1*x3^2*x8-2*x2^2*x4*x8+4*x2*x3*x4*x8+3*
      x3^2*x4*x8-x2*x4*x8+6*x3*x4*x8+x2*x5*x8+6*x3*x5*x8+3*x5*x8+3*x6*x8,
      x1*x2^3*x6-4*x1*x2^2*x3*x6+3*x1*x2*x3^2*x6-2*x1*x2^2*x3*x7+3*x1*x2*x3^2*
      x7-3*x1*x2^2*x7+2*x1*x2*x3*x7+3*x1*x3^2*x7-2*x1*x2^2*x8+4*x1*x2*x3*x8+3*
      x1*x3^2*x8-x1*x2*x8+6*x1*x3*x8+x2*x4*x8+6*x3*x4*x8+3*x4*x8+3*x5*x8,
      x1*x2^3*x5-4*x1*x2^2*x3*x5+3*x1*x2*x3^2*x5-2*x1*x2^2*x3*x6+3*x1*x2*x3^2*
      x6-3*x1*x2^2*x6+2*x1*x2*x3*x6+3*x1*x3^2*x6-2*x1*x2^2*x7+4*x1*x2*x3*x7+3*
      x1*x3^2*x7-x1*x2*x7+6*x1*x3*x7+x1*x2*x8+6*x1*x3*x8+3*x1*x8+3*x4*x8,
      x1*x2^3*x4-4*x1*x2^2*x3*x4+3*x1*x2*x3^2*x4-2*x1*x2^2*x3*x5+3*x1*x2*x3^2*
      x5-3*x1*x2^2*x5+2*x1*x2*x3*x5+3*x1*x3^2*x5-2*x1*x2^2*x6+4*x1*x2*x3*x6+3*
      x1*x3^2*x6-x1*x2*x6+6*x1*x3*x6+x1*x2*x7+6*x1*x3*x7+3*x1*x7+3*x1*x8}, {0,
      0, -x8, x7, -x8, 0, x6, 0, x5, 2*x4,
      -x2^2*x3^2*x8+x2*x3^3*x8+x2^3*x8-3*x2^2*x3*x8+x2*x3^2*x8+x3^3*x8,
      -2*x2^2*x3*x8+2*x2*x3^2*x8+x3^3*x8-x2^2*x8-x2*x3*x8+3*x3^2*x8,
      -x2^2*x8+x2*x3*x8+3*x3^2*x8-x2*x8+3*x3*x8, x1^2+3*x3*x8+x8,
      x1*x2^3*x3-2*x1*x2^2*x3^2+x1*x2*x3^3+x8}, {0, -x8, x7, 0, 0, x6, 0, 2*x5,
      x4, -x1, -2*x2^2*x3*x8+2*x2*x3^2*x8+x3^3*x8-x2^2*x8-x2*x3*x8+3*x3^2*x8,
      -x2^2*x8+x2*x3*x8+3*x3^2*x8-x2*x8+3*x3*x8, x1^2+3*x3*x8+x8,
      x1*x2^3*x3-2*x1*x2^2*x3^2+x1*x2*x3^3+x8,
      -x1*x2^2*x3^2+x1*x2*x3^3+x1*x2^3-3*x1*x2^2*x3+x1*x2*x3^2+x1*x3^3}, {-x8,
      x7, 0, 0, 2*x6, x5, x4, 0, -x1, 0,
      -x2^2*x8+x2*x3*x8+3*x3^2*x8-x2*x8+3*x3*x8, x1^2+3*x3*x8+x8,
      x1*x2^3*x3-2*x1*x2^2*x3^2+x1*x2*x3^3+x8,
      -x1*x2^2*x3^2+x1*x2*x3^3+x1*x2^3-3*x1*x2^2*x3+x1*x2*x3^2+x1*x3^3,
      -2*x1*x2^2*x3+2*x1*x2*x3^2+x1*x3^3-x1*x2^2-x1*x2*x3+3*x1*x3^2}, {2*x7,
      x6, x5, x4, 0, 0, -x1, -x1, 0, 0, x1^2+3*x3*x8+x8,
      x1*x2^3*x3-2*x1*x2^2*x3^2+x1*x2*x3^3+x8,
      -x1*x2^2*x3^2+x1*x2*x3^3+x1*x2^3-3*x1*x2^2*x3+x1*x2*x3^2+x1*x3^3,
      -2*x1*x2^2*x3+2*x1*x2*x3^2+x1*x3^3-x1*x2^2-x1*x2*x3+3*x1*x3^2,
      -x1*x2^2+x1*x2*x3+3*x1*x3^2-x1*x2+3*x1*x3}, {-x6, -x5, -x4, -x1, -x4,
      -x1, 0, 0, 0, 0, x1*x2^3*x3-2*x1*x2^2*x3^2+x1*x2*x3^3-x2^2*x3^2*x4+x2*x3^
      3*x4+x2^3*x4-3*x2^2*x3*x4+x2*x3^2*x4+x3^3*x4-2*x2^2*x3*x5+2*x2*x3^2*x5+x3
      ^3*x5-x2^2*x5-x2*x3*x5+3*x3^2*x5-x2^2*x6+x2*x3*x6+3*x3^2*x6-x2*x6+3*x3*x6
      +3*x3*x7+x7+2*x8, -x1*x2^2*x3^2+x1*x2*x3^3+x1*x2^3-3*x1*x2^2*x3+x1*x2*x3^
      2+x1*x3^3-2*x2^2*x3*x4+2*x2*x3^2*x4+x3^3*x4-x2^2*x4-x2*x3*x4+3*x3^2*x4-x2
      ^2*x5+x2*x3*x5+3*x3^2*x5-x2*x5+3*x3*x5+3*x3*x6+x6+x7,
      -2*x1*x2^2*x3+2*x1*x2*x3^2+x1*x3^3-x1*x2^2-x1*x2*x3+3*x1*x3^2-x2^2*x4+x2*
      x3*x4+3*x3^2*x4-x2*x4+3*x3*x4+3*x3*x5+x5+x6,
      -x1*x2^2+x1*x2*x3+3*x1*x3^2-x1*x2+3*x1*x3+3*x3*x4+x4+x5, 3*x1*x3+x1+x4}}

--------------------------
---**Example #2**---------
--------------------------

 T = ZZ/101[x1,x2,x3,x4,x5,x6,x7,x8,x9,x10];

 matrix {{0, 0, 0, 0, -x10, -x10, -x9, -x8, -x7, 1, x2*x8, 0, x2*x7,
     x2*x6, x2*x5-x3*x10, 2*x1*x2-x3*x8, x5*x7, 2*x1*x8, x2*x10+x4*x10,
     2*x1*x7, x3*x4*x10+2*x1*x5, x3^2*x10+x4*x7, -x2*x10,
     x3*x6*x9-2*x5*x9+x8*x9+2*x9^2-2*x1*x10, 2*x1*x6, x4*x8+2*x2*x9-x3*x10,
     -2*x2*x10, x3*x5*x9+2*x8*x9-4*x1*x10+x6*x10, x3^2*x9+x4*x6-x3*x8-x10,
     x2*x3*x9, 2*x1*x3*x9-2*x1*x8+x5*x9+2*x6*x9, x2^2*x9-50*x2*x3*x10,
     x3*x4*x8+3*x1^2, x3^2*x8+x4*x5-x3*x7+x3*x10-2*x10,
     2*x1*x3*x8-x4^2*x10-2*x1*x7+2*x5*x9+2*x1*x10,
     x3^2*x6+2*x1*x4-x3*x5+x3*x8+3*x3*x9-x7-2*x8,
     2*x1*x3*x6-x4^2*x8-2*x1*x5+2*x1*x8+4*x1*x9,
     2*x1*x3*x5-x4^2*x7+2*x1*x7+4*x1*x8,
     3*x1^2*x3-x4^2*x5+x3*x4*x7+2*x1*x5+4*x1*x6+2*x4*x10,
     x3*x8*x9+2*x1*x3*x10-x5*x10-2*x6*x10+x9*x10,
     3*x1^2*x6-x4*x8*x9+4*x1*x4*x10-x4*x6*x10,
     x4^3*x10+4*x1^3+2*x1*x4*x7-x4*x5*x9-2*x1*x4*x10,
     -25*x2*x3*x10^2-x1*x9*x10+x2*x10^2,
     2*x1*x4*x9-x3*x8*x9+x3*x9^2-4*x8*x9+4*x1*x10+x5*x10-x9*x10,
     -2*x1*x7-2*x5*x9, 3*x2*x3*x10^2-2*x1*x7^2,
     -x3*x8*x9^2-2*x1*x8*x10+2*x5*x9*x10-x9^2*x10,
     3*x1^2*x8*x9+2*x4*x5*x9*x10-x4*x8*x9*x10-x4*x9^2*x10+2*x1*x4*x10^2,
     3*x1^2*x5*x9+2*x1*x4*x8*x10-x4*x5*x9*x10-x4*x6*x9*x10,
     3*x1^2*x9^2-2*x1*x4*x8*x10+2*x4*x5*x9*x10+x4*x6*x9*x10-4*x3*x8*x9*x10-x4*
     x9^2*x10+2*x1*x3*x10^2+x3*x5*x10^2-x3*x6*x10^2+x5*x10^2+2*x6*x10^2-x8*x10
     ^2-2*x9*x10^2, -x3*x5*x7^2*x10+2*x2^2*x10^3-x5*x7*x10^2}, {0, 0, 0, 0, 0,
     0, 0, 0, 0, x4, x1*x8, x5*x7, x1*x7, x1*x6, x1*x5, x1^2, 0, 0,
     2*x5*x9+x1*x10, 0, 0, 0, x3*x6*x9-2*x5*x9+x8*x9+2*x9^2-x1*x10, 0, 0,
     2*x1*x9, x3*x5*x9+2*x8*x9-2*x1*x10+x6*x10, 0, 0, x1*x3*x9+x5*x9+2*x6*x9,
     0, 2*x1*x2*x9+50*x3*x8*x9-50*x1*x3*x10+50*x5*x10-x6*x10-50*x9*x10, 0, 0,
     0, 0, 0, 0, 0, 0, 0, 0,
     2*x2*x5*x9^2+25*x3*x8*x9*x10+50*x3*x9^2*x10-25*x1*x3*x10^2-2*x8*x9*x10+x1
     *x10^2-25*x5*x10^2+50*x6*x10^2+25*x9*x10^2, 0,
     x3^2*x8*x9+4*x2*x5*x9+8*x2*x6*x9+2*x3*x5*x10+3*x3*x6*x10-x3*x9*x10-x7^2-2
     *x5*x10-x8*x10-2*x9*x10, 3*x1*x3*x10^2-x7^3+x5*x10^2+2*x6*x10^2,
     x3^2*x9^2*x10+8*x2*x8*x9^2-2*x2*x5*x9*x10+4*x3*x8*x9*x10-x3*x5*x10^2+x3*
     x6*x10^2+x3*x9*x10^2-2*x5*x10^2-4*x6*x10^2+x8*x10^2+2*x9*x10^2, 0, 0, 0,
     -x3^2*x7^3*x10+x3^2*x7^2*x10^2+4*x3^2*x5*x10^3-2*x2*x7^4-3*x3*x7^2*x10^2+
     4*x1*x2*x10^3+2*x3*x7*x10^3+3*x3*x8*x10^3-2*x7*x10^3+x10^4}, {0, 0, 0, 0,
     0, 0, 0, 0, 0, 0, -x6*x10, -x7*x10, -x5*x10, -x5*x9, -x1*x10, -x1*x8,
     x4*x7*x10, x4*x6*x10, 2*x3*x6*x10-x5*x10+x9*x10, x4*x5*x10, x1*x4*x10,
     2*x1*x3*x10-x5*x7+x5*x10+3*x6*x10, x2*x6*x9+x8*x10+x9*x10,
     x1*x6*x9-x4*x8*x10-x4*x9*x10, x4*x5*x9, 2*x3*x5*x9+x8*x9-x1*x10+x6*x10,
     x2*x5*x9+x8*x10, x1*x5*x9-x4*x8*x10, 2*x1*x3*x9-x1*x8+x5*x9+3*x6*x9,
     x1*x2*x9-x6*x10, x1^2*x9, 50*x2*x8*x9-50*x1*x2*x10-x3*x8*x10-50*x10^2,
     x1*x4*x8, 2*x1*x3*x8-x1*x7+3*x5*x9+x1*x10, x1^2*x8,
     2*x1*x3*x6-x1*x5+x1*x8+3*x1*x9, x1^2*x6, x1^2*x5+x4*x5*x7, x1^3+x1*x4*x7,
     2*x3*x4*x8*x10+x1*x8*x9+x1^2*x10-x4*x10^2, x4^2*x8*x10, 0,
     25*x2*x8*x9*x10+50*x4*x8*x9*x10+50*x2*x9^2*x10-25*x1*x2*x10^2+50*x3*x8*
     x10^2-x3*x9*x10^2+50*x8*x10^2+25*x10^3,
     x4^2*x8*x9+2*x3*x4*x9*x10-x1*x8*x9+x1*x9^2+x4*x8*x10+x4*x10^2,
     2*x2*x3*x8*x9+3*x3^2*x8*x10+2*x2*x5*x10+3*x2*x6*x10-2*x3*x7*x10-x2*x9*x10
     -x4*x9*x10-2*x3*x10^2-x10^2,
     3*x3^2*x5*x10^2-2*x3*x7^2*x10+3*x1*x2*x10^2+2*x3*x7*x10^2+2*x3*x8*x10^2-3
     *x7*x10^2+x10^3, 2*x2*x3*x9^2*x10+3*x3^2*x9*x10^2-x1*x8*x9^2+4*x2*x8*x9*
     x10-x2*x5*x10^2+x2*x6*x10^2-2*x3*x8*x10^2+x2*x9*x10^2+2*x4*x9*x10^2+2*x3*
     x10^3+x10^3, x4^2*x8*x10^2+x4^2*x9*x10^2, 0,
     3*x3^2*x4*x9*x10^2+2*x4^2*x9*x10^2+2*x3*x4*x10^3-4*x1*x8*x9*x10+x5*x9^2*
     x10-x6*x9^2*x10+x1^2*x10^2+x1*x5*x10^2-x1*x6*x10^2,
     4*x3^3*x7*x10^3-2*x2*x3*x7^3*x10+2*x2*x3*x7^2*x10^2+8*x2*x3*x5*x10^3+3*x3
     ^2*x10^4-x1*x5*x7^2*x10-3*x2*x7^2*x10^2+2*x2*x7*x10^3+3*x2*x8*x10^3}, {0,
     0, 0, 0, 0, 0, 0, 0, 0, x2, 0, 0, 0, 0, 0, 0, x3*x7*x10+x10^2,
     x3*x6*x10+x9*x10, x1*x10, x3*x5*x10+x8*x10, x1*x3*x10+x6*x10, x1*x7,
     x8*x9, -2*x4*x8*x9-x3*x8*x10-x3*x9*x10, x3*x5*x9+x8*x9, x1*x8, x6*x10,
     -2*x4*x6*x10-x3*x8*x10+x10^2, x1*x6, x5*x9, -2*x4*x5*x9+x8*x10+x9*x10,
     -50*x9*x10, x1*x3*x8+x5*x9, x1*x5, -2*x1*x4*x10+x7*x10+x8*x10, x1^2,
     -2*x1*x4*x8+x5*x10+x6*x10, -2*x1*x4*x7+x3*x5*x7+x7^2+2*x5*x10,
     -2*x1*x4*x5+x1*x3*x7+x5*x7+2*x1*x10, x3^2*x8*x10-2*x4*x9*x10-x3*x10^2,
     3*x4^2*x6*x10+2*x3*x4*x8*x10-x1*x8*x9+2*x1^2*x10-x1*x6*x10-2*x4*x10^2,
     3*x1*x4^2*x10+x1^2*x7-x1*x5*x9-x1^2*x10-2*x4*x7*x10-2*x4*x8*x10,
     50*x3*x8*x9*x10+50*x6*x10^2+25*x9*x10^2,
     2*x3*x4*x8*x9+x3^2*x9*x10+x1^2*x9+2*x4*x6*x10+x3*x8*x10+2*x4*x9*x10+x3*
     x10^2-x10^2, -x3*x9*x10, 0, 2*x4*x9^2*x10+2*x3*x9*x10^2+x9*x10^2,
     3*x4^2*x8*x9*x10+2*x3*x4*x8*x10^2+2*x3*x4*x9*x10^2+2*x1*x5*x9*x10-x1*x8*
     x9*x10-x1*x9^2*x10+x1^2*x10^2,
     3*x4^2*x5*x9*x10+x1^2*x8*x10-x1*x5*x9*x10-x1*x6*x9*x10-2*x4*x8*x10^2-2*x4
     *x9*x10^2, x3^3*x9*x10^2+3*x4^2*x9^2*x10+4*x3*x4*x9*x10^2+x3^2*x10^3-x5*
     x9^3-x1^2*x8*x10+2*x1*x5*x9*x10+x1*x6*x9*x10-x1*x9^2*x10, 0}, {0, 0,
     -x10, -x9, x8, 0, 0, x6, 2*x5, 0, 0, x2*x7, -x3*x10, -x3*x9, x1*x2, -x9,
     x1*x7, 0, 2*x2*x9-x3*x10, x3*x4*x10, x1^2, -x3*x7+x3*x10-2*x10, -2*x2*x9,
     -2*x1*x9, x3*x4*x9, x3^2*x9-x10, x2*x3*x9, x1*x3*x9, x3*x9-2*x9,
     x2*x9+x4*x9, -x4^2*x9+x1*x9, 50*x2*x10, x4*x9, x1*x4+3*x3*x9-x7, 2*x1*x9,
     -x1*x3+x9, -x1^2+x4*x10, x1^2*x3+x3*x4*x7+2*x4*x10, -x1*x4^2+x1^2+x4*x7,
     2*x9^2-x1*x10, 0, -x1*x4*x9, x2^2*x9^2-25*x2*x10^2, -x9^2+x1*x10,
     2*x2^2*x9+2*x2*x3*x10-2*x1*x9-2*x2*x10, x3^3*x10^2+x2*x10^2,
     -x2^2*x9*x10-x2*x3*x10^2-2*x9^3+2*x1*x9*x10-2*x2*x10^2, 2*x1*x4*x9*x10,
     x4^3*x9*x10+x1^3*x9-x1*x4*x9*x10,
     -x4*x9^3+2*x1*x4*x9*x10+x3*x9^2*x10+x1*x3*x10^2+x1*x10^2,
     4*x2*x3^2*x10^3-x1*x3*x7^2*x10-x1*x7*x10^2}, {-x10, -x10, 0, x8, 0, x7,
     2*x6, x5, 0, 0, -x3*x10, 0, 0, x1*x2, -x10, 0, 0, x3*x4*x10, x3^2*x10, 0,
     x4*x10, 3*x3*x10, x2*x3*x9, x1*x3*x9, x1^2, x3*x10-2*x10, x2*x10+x4*x10,
     -x4^2*x10+x1*x10, x1*x4+3*x3*x9, 2*x2*x9-x3*x10, 2*x1*x9, -x2*x10, 0,
     x10, 0, x1*x3^2+2*x9, x1^2*x3+x4*x10, 0, 2*x1^2, -2*x1*x10,
     x4^3*x10+x1^3-x1*x4*x10, 0, 50*x2*x10^2+50*x4*x10^2, x4^2*x10+2*x9^2,
     4*x2^2*x9+3*x2*x3*x10, 2*x2*x10^2, x2*x3*x10^2-4*x2*x10^2, 0,
     -x1*x4*x9*x10, x1*x4*x9*x10-x3*x9^2*x10-x1*x3*x10^2+2*x1*x10^2+x9*x10^2,
     0}, {x9, 0, x8, 0, 0, x6, 0, 0, -x1, 0, 0, x2*x5-x3*x10, x1*x2, 0, 0, 0,
     x3*x4*x10+x1*x5, 0, -x10, x1^2, 0, x1*x4-x3*x5-2*x7, 0, 0, 0, 0, 0, 0, 0,
     0, 0, 0, 0, -x1*x3-x5, -x1^2+x4*x10, -x1, 0,
     -x1*x4^2+x3*x4*x5+x1^2+2*x4*x7, x1*x3*x4+x4*x5, 0, 0, x1^2*x4-x4^2*x10,
     0, 0, -x3^2*x10-x1^2-2*x2*x7,
     -2*x3^2*x7*x10+x3^2*x10^2-2*x1^2*x7-3*x2*x7^2-3*x3*x10^2, 0, 0, 0, 0,
     x3^4*x10^3-3*x2*x3^2*x7^2*x10+2*x2*x3^2*x7*x10^2-4*x2^2*x7^3-2*x1*x3*x5*
     x7*x10-6*x2*x3*x7*x10^2+2*x2*x3*x10^3-x1*x5*x10^2-2*x2*x10^3}, {0, 2*x8,
     x7, x6, x5, 0, 0, -x1, 0, 0, x1*x2, 0, -x10, -x9, 0, -x1*x3, 0, x1^2,
     -2*x10, x4*x10, 0, x10, x2*x9+x4*x9+x3*x10, -x4^2*x9-x3*x4*x10+x1*x9,
     x4*x9, x1*x4+x3*x9, 2*x2*x9+x3*x10, -x3*x4*x10+2*x1*x9, -x1*x3+x9, -x10,
     -x1^2+x4*x10, 50*x2*x3*x9+50*x3^2*x10, x1*x3*x4, x1*x3^2+2*x9,
     x1^2*x3+x4*x10, x1*x3-2*x1, -x1*x4^2+x1^2, 2*x1^2, 0,
     x3^2*x4*x10+x1*x3*x9, x3*x4^2*x10-x1*x4*x9, -x4^2*x10,
     25*x2*x3*x9*x10+50*x3*x4*x9*x10+25*x3^2*x10^2-2*x2*x9*x10+50*x3*x10^2,
     x3*x4^2*x9-x1*x3*x9+x3*x4*x10-4*x1*x9, x2*x3^2*x9+x3^3*x10-x2*x10,
     x3^2*x10^2, 4*x2^2*x9^2-x1*x3*x9^2+4*x2*x3*x9*x10-x3^2*x10^2-x1^2*x10+x2*
     x10^2, x4^3*x9*x10+x3*x4^2*x10^2+x1^3*x9-x1*x4*x9*x10,
     x1^2*x4*x10-x4^2*x10^2, -x1^2*x4*x10-4*x1*x3*x9*x10+x9^2*x10-x1*x10^2,
     3*x2*x3*x10^3}, {x7, 0, 0, -x5, 0, 0, -x1, 0, 0, 0, -x10, 0, 0,
     -x3*x5-x8, 0, -x5, 0, x4*x10, 2*x2*x5+x3*x10, 0, 0, 2*x10,
     x2*x3*x6-2*x2*x5+x2*x8+x4*x8+4*x2*x9+x3*x10,
     x1*x3*x6-x4^2*x8-x3*x4*x10-2*x1*x5+x1*x8+4*x1*x9, x3*x4*x5+x4*x8,
     x3^2*x5+2*x1*x2+x3*x8+x10, x2*x3*x5+2*x2*x8, x1*x3*x5+2*x1*x8,
     x1*x3^2+x3*x5+3*x3*x6-2*x5+x8+4*x9, x1*x2*x3+x2*x5+x4*x5+2*x2*x6-2*x10,
     x1^2*x3-x4^2*x5+x1*x5+2*x1*x6+x4*x10,
     x1*x2^2+50*x2*x3*x8-50*x2*x10-50*x4*x10, x4*x5, 3*x3*x5+2*x8, 2*x1*x5,
     3*x1*x3+x5+2*x6, 2*x1^2, 0, 0, x1*x3*x8-x4^2*x10+4*x5*x9+x1*x10,
     -x1*x4*x8, -x1*x4*x5, 2*x2^2*x5*x9+25*x2*x3*x8*x10+50*x3*x4*x8*x10-x2*x3*
     x9*x10+50*x3^2*x10^2+50*x1^2*x10-2*x2*x8*x10+25*x2*x10^2+25*x4*x10^2,
     x3*x4^2*x8+x3^2*x4*x10+x1^2*x4-x1*x3*x8+2*x1*x3*x9+x4^2*x10-4*x1*x8-2*x5*
     x9+4*x6*x9-x1*x10, x2*x3^2*x8+2*x2^2*x5+4*x2^2*x6-x2*x3*x10-x3*x4*x10-2*
     x1*x5-2*x2*x10, 0, 2*x2*x3^2*x9*x10+x3^3*x10^2+8*x2^2*x8*x9-2*x1*x3*x8*x9
     -x2^2*x5*x10+4*x2*x3*x8*x10+2*x4^2*x9*x10+x2*x3*x10^2+2*x3*x4*x10^2-6*x5*
     x9^2+2*x1*x5*x10-2*x1*x9*x10+2*x2*x10^2+x4*x10^2,
     x4^3*x8*x10+x3*x4^2*x10^2+x1^3*x8+2*x1*x4*x5*x10-x1*x4*x8*x10-2*x1*x4*x9*
     x10, x4^3*x5*x10+x1^3*x5-x1*x4*x5*x10-x1*x4*x6*x10-x4^2*x10^2,
     x3^3*x4*x10^2+2*x4^3*x9*x10+2*x3*x4^2*x10^2+2*x1^3*x9-3*x4*x5*x9^2+2*x1*
     x4*x5*x10+x1*x4*x6*x10-4*x1*x3*x8*x10-2*x1*x4*x9*x10+2*x3*x5*x9*x10-2*x3*
     x6*x9*x10+2*x8*x9*x10-6*x9^2*x10-2*x1*x10^2+x6*x10^2, 0}, {-x6, -x6, -x5,
     0, -x1, -x1, 0, 0, 0, 0, -x3*x6-x9, -x3*x7-2*x10, -x3*x5-x8, 0,
     -x1*x3-x6, 0, x3*x4*x7+2*x4*x10, x3*x4*x6+x4*x9,
     x3^2*x6+x1*x2+x1*x4-x3*x5+x3*x9-x7-2*x8, x3*x4*x5+x4*x8, x1*x3*x4+x4*x6,
     x1*x3^2+x3*x5+3*x3*x6-2*x5+x8+2*x9, -x1*x2+x3*x8+x3*x9,
     -x3*x4*x8-x3*x4*x9-x1^2, 0, -x1*x3+x3*x6-x5-2*x6+x9,
     -2*x1*x2+x2*x6+x4*x6+x3*x8-2*x10,
     -x4^2*x6-x3*x4*x8-2*x1^2+x1*x6+2*x4*x10, -x1, -x3*x6-x8-2*x9,
     x4*x8+x4*x9, -50*x1*x2*x3+50*x3^2*x8+50*x2*x5-x2*x6-50*x2*x9-50*x4*x9+x3*
     x10, 0, x1*x3-2*x1+x6, -x1*x4^2+x1^2+x4*x7+x4*x8, 0, x4*x5+x4*x6,
     2*x4*x5, 2*x1*x4, x3^2*x4*x8+x1^2*x3-x4^2*x9-2*x3*x4*x10-x1*x5-2*x1*x6+x1
     *x9, x4^3*x6+x3*x4^2*x8+2*x1^2*x4-x1*x4*x6-2*x4^2*x10,
     x1*x4^3-x1^2*x4-x4^2*x7-x4^2*x8,
     25*x2*x3*x8*x9+50*x3*x4*x8*x9+50*x2*x3*x9^2-50*x1*x2*x3*x10+50*x3^2*x8*
     x10-x3^2*x9*x10+50*x1^2*x9-2*x2*x8*x9+2*x1*x2*x10-50*x2*x5*x10-x2*x6*x10-
     x4*x6*x10-x3*x8*x10+50*x2*x9*x10+50*x4*x9*x10-26*x3*x10^2-49*x10^2,
     x3^2*x4*x9+x4^2*x6+x3*x4*x8+x4^2*x9+2*x3*x4*x10+2*x1^2+x1*x5-x1*x9-2*x4*
     x10, x3^3*x8+2*x2*x3*x5+3*x2*x3*x6-x3^2*x7-x2*x3*x9-x3*x4*x9-2*x3^2*x10-2
     *x2*x5-x2*x8-2*x2*x9-2*x3*x10,
     2*x3^3*x5*x10-x3^2*x7^2+6*x1*x2*x3*x10+2*x3^2*x7*x10+2*x3^2*x8*x10+2*x2*
     x5*x10+4*x2*x6*x10-6*x3*x7*x10+3*x3*x10^2-6*x10^2,
     x2*x3^2*x9^2+2*x3^3*x9*x10-x2^2*x5*x9+4*x2*x3*x8*x9+x4^2*x9^2-2*x2*x3*x5*
     x10+2*x2*x3*x6*x10-2*x3^2*x8*x10+2*x2*x3*x9*x10+4*x3*x4*x9*x10+3*x3^2*x10
     ^2-x1^2*x8+2*x1*x5*x9-x1*x9^2-4*x2*x5*x10-8*x2*x6*x10+2*x2*x8*x10+4*x2*x9
     *x10+2*x4*x9*x10+3*x3*x10^2,
     x4^3*x8*x9+2*x3*x4^2*x8*x10+2*x3*x4^2*x9*x10+2*x1*x4*x5*x9-x1*x4*x8*x9-x1
     *x4*x9^2+2*x1^2*x4*x10,
     x4^3*x5*x9+x1^2*x4*x8-x1*x4*x5*x9-x1*x4*x6*x9-2*x4^2*x8*x10-2*x4^2*x9*x10
     , 2*x3^3*x4*x9*x10+x4^3*x9^2+4*x3*x4^2*x9*x10+3*x3^2*x4*x10^2-x1^2*x4*x8+
     2*x1*x4*x5*x9+x1*x4*x6*x9-4*x1*x3*x8*x9-x1*x4*x9^2+x3*x5*x9^2-x3*x6*x9^2+
     2*x1^2*x3*x10+2*x1*x3*x5*x10-2*x1*x3*x6*x10+x8*x9^2-2*x9^3+2*x1*x5*x10+4*
     x1*x6*x10-2*x1*x8*x10-4*x1*x9*x10+2*x6*x9*x10,
     3*x3^4*x7*x10^2-x2*x3^2*x7^3+2*x2*x3^2*x7^2*x10+12*x2*x3^2*x5*x10^2+4*x3^
     3*x10^3-x1*x3*x5*x7^2-6*x2*x3*x7^2*x10+6*x1*x2^2*x10^2+6*x2*x3*x7*x10^2+9
     *x2*x3*x8*x10^2-2*x1*x5*x7*x10-6*x2*x7*x10^2+4*x2*x10^3}}

---------------------------
--**Example 3--------------
---------------------------

 T = ZZ/101[x1,x2,x3,x4,x5,x6,x7,x8];

MM := matrix {{x8, 0, x6, -x5, x5*x7+x2*x8, 0, 0, x5*x8, x5^2, x4*x5, x5*x8,
     x3*x5, x2*x5, 2*x1*x5, x2*x4+x3*x8-x5, x2*x3-x8, 2*x1*x2-x3*x7, -x8^2,
     x5*x8, 0, x3^2*x8-x2*x8+x4*x8, 0, -x2*x8^2, 0, x3^2*x7-x2*x7-2*x1*x8, 0,
     2*x1*x3^2+2*x1*x4-2*x3*x7-x2, x2*x8^3, 0}, {0, x6, -x7, 2*x2, x1*x8+x8^2,
     x3*x7, x5*x8, x5^2+x5*x7, -x8^2, -x5, x3*x5-x4*x8, -x8, x1*x5, 0, x1*x4,
     x1*x3-x5-x7, x1^2, -2*x5*x8-2*x7*x8, x4*x8^2+x5*x7, x3*x8^2-x5*x8,
     x4*x5-x1*x8-x8, 0, x5*x7^2-x1*x8^2-x8^3, x5*x7*x8, -x1*x7,
     x4*x5*x8-x8^3+x8^2, -x1-2*x8, x1*x8^3+x8^4, 0}, {0, 0, 0, 0, -x7*x8,
     x2*x7, -x5*x7, -x6*x8, 0, 0, x2*x5-x8^2, x1*x5, 0, 0, x1*x8, x1*x2,
     -x1*x7, 2*x3*x7*x8, -x6*x8, x4*x6*x8+x2*x8^2, 2*x1*x3*x8-x5*x8-x7*x8,
     x5*x7^2, -x6*x7*x8+x7*x8^2, -x6^2*x8, 2*x1*x3*x7-x5*x7-x7^2,
     -2*x3*x6*x8+x5*x8^2, 2*x1^2*x3-2*x1*x7, -x6^2*x7*x8+x6*x7*x8^2-x7*x8^3,
     3*x3^2*x6^2*x8^2-3*x5^2*x6^2*x8-3*x5^2*x6*x8^2}, {x7, 0, 0, 0, x6*x8, 0,
     x5*x6, 0, -x6*x8, x1*x5, -x5^2-x2*x8, 0, 0, 0, x1*x2, 0, 0, 0,
     2*x4*x6*x8+x2*x8^2, x3*x6*x8, x2*x5+x1*x8, 0, x6^2*x8-x6*x8^2, 0, 0,
     x5^3+x2*x5*x8-x6*x8^2, x1^2, x6^3*x8-x6^2*x8^2+x6*x8^3, 0}, {0, -x7, 0,
     -x1, x1*x7, -x6, x4*x6-x3*x7+x2*x8, 2*x2*x5+x2*x7+x1*x8, 2*x1*x5,
     x1*x4-x2, x2*x3-2*x4*x5+x1*x8-x6, x1*x3-2*x5-x7, x1*x2, x1^2, -x1-x8,
     -x2, x7, -3*x5^2-4*x5*x7-x7^2-2*x2*x8, x2*x7+x1*x8+x8^2,
     -3*x5^2-2*x5*x7-x2*x8, x2*x4-x3*x8-2*x5, x3*x7^2-x6^2, x2*x7^2+x7*x8^2,
     3*x5^2*x7+2*x5*x7^2+x2*x7*x8, -x3*x7,
     3*x4*x5^2+x2*x4*x8+x3*x8^2+4*x5*x6+x6*x7+2*x5*x8+2*x7*x8, -2*x5,
     2*x5*x7^3+x6*x7*x8^2-x7*x8^3, -6*x5^5-6*x3*x5*x6^2*x8-6*x3*x5*x6*x8^2},
     {-1, x2, x1, 0, x4*x8, -x5-x7, x4*x5+2*x6+x8, -x3*x8, -x4*x8, 0, -x5, 0,
     -x8, 0, 0, 0, 0, 0, x4^2*x8-x3*x8, x3*x4*x8, 0, -2*x5*x6-2*x6*x7-x7*x8,
     2*x4*x6*x8-x3*x7*x8-x4*x8^2, -2*x3*x6*x8, -x8,
     -x3^2*x8-x4*x8^2+2*x5^2+x5*x7, 0,
     3*x4*x6^2*x8-2*x3*x6*x7*x8-2*x4*x6*x8^2+x3*x7*x8^2+x5*x7*x8^2+x4*x8^3,
     2*x3^3*x6*x8^2-6*x3*x5^2*x6*x8-3*x3*x5^2*x8^2-4*x6^3*x8-9*x6^2*x8^2-6*x6*
     x8^3-x8^4}, {x4, -x5, -x2, 0, x1*x5-x3*x8, x2*x3-x6-x8, -x3*x5, x2*x5, 0,
     0, 0, -x5, 0, -x8, -x8, -x2, -x1*x3+x5+2*x7,
     x3^2*x8-2*x5^2-2*x5*x7-2*x2*x8, x2*x5, -x5^2, -x3*x8,
     2*x3*x5*x7-x6^2-x6*x8, 2*x2*x5*x7-x3*x6*x8+x3*x8^2+x5*x8^2,
     x5^3+2*x5^2*x7+x2*x5*x8, x1*x3^2-x1*x2-x3*x5-2*x3*x7, x5*x6+2*x5*x8,
     -2*x1*x3+2*x7, 3*x5^2*x7^2-x3*x6^2*x8+x3*x6*x8^2+x5*x6*x8^2-x3*x8^3-x5*x8
     ^3, 0}, {x1, 0, 0, 0, x1*x2+x4*x6-x3*x7+2*x2*x8, -x7, x2*x5+x6,
     x1*x5-x3*x6, -x4*x6-2*x2*x8, 2*x8, -x2*x4+x1*x5-2*x3*x8, -x2, -x6, -x7,
     x1*x3-x5-x7, -x1, 0, x3^2*x7-2*x2*x5-2*x2*x7-2*x1*x8,
     x4^2*x6+2*x2*x4*x8+x1*x5-x3*x6+2*x5*x8, x3*x4*x6+2*x2*x3*x8-x2*x5,
     x1*x3^2-x1*x2+x1*x4-x3*x5-x3*x7-x2, -x6*x7,
     x4*x6^2-x3*x6*x7-2*x1*x2*x8-2*x4*x6*x8+2*x3*x7*x8+2*x5*x7*x8-3*x2*x8^2,
     -x3*x6^2+x2*x5*x7, -x1^2-x6,
     x2*x4*x5-x3^2*x6+2*x3*x5*x8-2*x4*x6*x8-3*x2*x8^2+x5^2+2*x5*x7+2*x2*x8,
     -2*x2, x4*x6^3-x3*x6^2*x7-2*x4*x6^2*x8+2*x3*x6*x7*x8+2*x5*x6*x7*x8+3*x1*
     x2*x8^2+3*x4*x6*x8^2-3*x3*x7*x8^2-3*x5*x7*x8^2+4*x2*x8^3,
     2*x3^3*x6^2*x8-3*x3*x5^2*x6^2-6*x3*x5^2*x6*x8-x6^4-6*x6^3*x8-9*x6^2*x8^2-
     4*x6*x8^3}}

---------------------------------
----Example 4--------------------
---------------------------------
(we should look at size 7 minors of the following)

 R = (ZZ/101)[YY_1, YY_2, YY_3, YY_4, YY_5, YY_6, YY_7, YY_8, YY_9];

 J =  ideal(YY_8^2-YY_7*YY_9,YY_6*YY_8-YY_5*YY_9,YY_3*YY_8-YY_2*YY_9,YY_2*YY_8-YY_1*YY_9,YY_6*YY_7-YY_5*YY_8,YY_3*YY_7-YY_1*YY_9,YY_2*YY_7-YY_1*YY_8,YY_6^2-YY_4*YY_9,YY_5*YY_6-YY_4*YY_8,YY_4*YY_6+YY_1*YY_8-10*YY_1*YY_9-YY_
      2*YY_9+10*YY_3*YY_9,YY_3*YY_6-YY_8*YY_9-10*YY_9^2,YY_2*YY_6-YY_7*YY_9-10*YY_8*YY_9,YY_1*YY_6-YY_7*YY_8-10*YY_7*YY_9,YY_5^2-YY_4*YY_7,YY_4*YY_5+YY_1*YY_7-10*YY_1*YY_8-YY_1*YY_9+10*YY_2*YY_9,YY_3*YY_5-YY_7*YY_9-10*YY_8
      *YY_9,YY_2*YY_5-YY_7*YY_8-10*YY_7*YY_9,YY_1*YY_5-YY_7^2-10*YY_7*YY_8,YY_4^2+YY_7^2-YY_9^2,YY_3*YY_4-YY_5*YY_9-10*YY_6*YY_9,YY_2*YY_4-YY_5*YY_8-10*YY_5*YY_9,YY_1*YY_4-YY_5*YY_7-10*YY_5*YY_8,YY_2^2-YY_1*YY_3,YY_1*YY_2-
      10*YY_1*YY_3-YY_2*YY_3+10*YY_3^2+YY_4*YY_8+10*YY_4*YY_9,YY_1^2-YY_3^2+YY_4*YY_7+20*YY_4*YY_8-YY_4*YY_9);

jac = matrix {{0, 0, 0, -YY_9, 0, -YY_9, -YY_8, 0, 0, YY_8-10*YY_9, 0, 0, YY_6, 0, YY_7-10*YY_8-YY_9, 0, 0, YY_5, 0, 0, 0, YY_4, -YY_3, YY_2-10*YY_3, 2*YY_1}, {0, 0, -YY_9, YY_8, 0, 0, YY_7, 0, 0, -YY_9, 0, YY_6, 0, 0,
     10*YY_9, 0, YY_5, 0, 0, 0, YY_4, 0, 2*YY_2, YY_1-YY_3, 0}, {0, 0, YY_8, 0, 0, YY_7, 0, 0, 0, 10*YY_9, YY_6, 0, 0, 0, 0, YY_5, 0, 0, 0, YY_4, 0, 0, -YY_1, -10*YY_1-YY_2+20*YY_3, -2*YY_3}, {0, 0, 0, 0, 0, 0, 0, -YY_9,
     -YY_8, YY_6, 0, 0, 0, -YY_7, YY_5, 0, 0, 0, 2*YY_4, YY_3, YY_2, YY_1, 0, YY_8+10*YY_9, YY_7+20*YY_8-YY_9}, {0, -YY_9, 0, 0, -YY_8, 0, 0, 0, YY_6, 0, 0, 0, 0, 2*YY_5, YY_4, YY_3, YY_2, YY_1, 0, -YY_9, -YY_8-10*YY_9,
     -YY_7-10*YY_8, 0, 0, 0}, {0, YY_8, 0, 0, YY_7, 0, 0, 2*YY_6, YY_5, YY_4, YY_3, YY_2, YY_1, 0, 0, 0, 0, 0, 0, -10*YY_9, 0, 0, 0, 0, 0}, {-YY_9, 0, 0, 0, YY_6, YY_3, YY_2, 0, 0, 0, 0, -YY_9, -YY_8-10*YY_9, -YY_4, YY_1,
     -YY_9, -YY_8-10*YY_9, -2*YY_7-10*YY_8, 2*YY_7, 0, 0, -YY_5, 0, 0, YY_4}, {2*YY_8, YY_6, YY_3, YY_2, -YY_5, 0, -YY_1, 0, -YY_4, YY_1, -YY_9, -10*YY_9, -YY_7, 0, -10*YY_1, -10*YY_9, -YY_7, -10*YY_7, 0, 0, -YY_5,
     -10*YY_5, 0, YY_4, 20*YY_4}, {-YY_7, -YY_5, -YY_2, -YY_1, 0, -YY_1, 0, -YY_4, 0, -10*YY_1-YY_2+10*YY_3, -YY_8-20*YY_9, -YY_7-10*YY_8, -10*YY_7, 0, -YY_1+10*YY_2, -YY_7-10*YY_8, -10*YY_7, 0, -2*YY_9, -YY_5-10*YY_6,
     -10*YY_5, 0, 0, 10*YY_4, -YY_4}}

---------------------------------
----Example 5--------------------
---------------------------------
     (we should look at size 5 minors of the following)

      T = (ZZ/101)[YY_1, YY_2, YY_3, YY_4, YY_5, YY_6, YY_7];
 J = ideal(YY_3*YY_5-YY_2*YY_6,YY_1*YY_5+14*YY_2*YY_5-YY_5^2-48*YY_1*YY_6-44*YY _2*YY_6+19*YY_3*YY_6-9*YY_5*YY_6-24*YY_6^2+45*YY_4*YY_7+30*YY_5*YY_7+15*YY _6*YY_7,YY_4^2-42*YY_2*YY_5+5*YY_4*YY_5+47*YY_5^2+11*YY_1*YY_6+24*YY_2*YY_ 6+20*YY_3*YY_6-34*YY_4*YY_6+YY_5*YY_6+43*YY_6^2+46*YY_4*YY_7-YY_5*YY_7+34* YY_6*YY_7,YY_3*YY_4-YY_1*YY_6,YY_2*YY_4+14*YY_2*YY_5-YY_5^2-48*YY_1*YY_6- 44*YY_2*YY_6+19*YY_3*YY_6-9*YY_5*YY_6-24*YY_6^2+45*YY_4*YY_7+30*YY_5*YY_7+ 15*YY_6*YY_7,YY_1*YY_4-50*YY_2*YY_5-YY_4*YY_5+14*YY_5^2-14*YY_1*YY_6-3*YY_ 2*YY_6+30*YY_3*YY_6+44*YY_4*YY_6+14*YY_5*YY_6+17*YY_6^2+30*YY_4*YY_7-16*YY _5*YY_7-40*YY_6*YY_7,YY_2^2+31*YY_1*YY_3-15*YY_2*YY_3+38*YY_3^2+21*YY_2*YY _5+12*YY_4*YY_5-7*YY_5^2+14*YY_1*YY_6-39*YY_2*YY_6+26*YY_3*YY_6-23*YY_4*YY _6-32*YY_5*YY_6+24*YY_6^2+47*YY_1*YY_7-12*YY_2*YY_7+4*YY_3*YY_7-30*YY_4*YY _7+8*YY_5*YY_7-16*YY_6*YY_7,YY_1*YY_2+23*YY_1*YY_3-36*YY_2*YY_3-8*YY_3^2+8 *YY_2*YY_5+34*YY_4*YY_5-3*YY_5^2+6*YY_1*YY_6+32*YY_2*YY_6+16*YY_3*YY_6+19* YY_4*YY_6+44*YY_5*YY_6-33*YY_6^2-7*YY_1*YY_7-4*YY_2*YY_7-41*YY_3*YY_7+16* YY_4*YY_7-11*YY_5*YY_7+22*YY_6*YY_7,YY_1^2+21*YY_1*YY_3-46*YY_2*YY_3+11*YY _3^2-33*YY_2*YY_5-6*YY_4*YY_5-48*YY_5^2-11*YY_1*YY_6+40*YY_2*YY_6+23*YY_3* YY_6-39*YY_4*YY_6+7*YY_5*YY_6-36*YY_6^2-44*YY_1*YY_7-10*YY_2*YY_7-42*YY_3* YY_7-41*YY_4*YY_7+26*YY_5*YY_7+23*YY_6*YY_7,YY_5^3+10*YY_1*YY_3*YY_6+20*YY _3^2*YY_6-11*YY_2*YY_5*YY_6-38*YY_4*YY_5*YY_6+45*YY_5^2*YY_6-21*YY_1*YY_6^ 2-6*YY_2*YY_6^2+18*YY_3*YY_6^2+47*YY_4*YY_6^2-27*YY_5*YY_6^2-49*YY_6^3+36* YY_2*YY_5*YY_7-29*YY_4*YY_5*YY_7-4*YY_5^2*YY_7+33*YY_1*YY_6*YY_7-45*YY_2* YY_6*YY_7+3*YY_3*YY_6*YY_7-48*YY_4*YY_6*YY_7+14*YY_5*YY_6*YY_7-10*YY_6^2* YY_7-20*YY_4*YY_7^2-48*YY_5*YY_7^2+16*YY_6*YY_7^2,YY_4*YY_5^2-50*YY_1*YY_3 *YY_6-9*YY_2*YY_3*YY_6-49*YY_3^2*YY_6-3*YY_2*YY_5*YY_6+24*YY_4*YY_5*YY_6- 17*YY_5^2*YY_6-36*YY_1*YY_6^2-31*YY_2*YY_6^2+33*YY_3*YY_6^2+18*YY_4*YY_6^2 -13*YY_5*YY_6^2+YY_6^3-25*YY_2*YY_5*YY_7+40*YY_4*YY_5*YY_7-15*YY_5^2*YY_7- 16*YY_1*YY_6*YY_7+5*YY_2*YY_6*YY_7+25*YY_3*YY_6*YY_7-4*YY_4*YY_6*YY_7+46* YY_5*YY_6*YY_7-3*YY_6^2*YY_7-8*YY_4*YY_7^2+2*YY_5*YY_7^2-46*YY_6*YY_7^2,YY _2*YY_5^2-39*YY_2*YY_5*YY_6-7*YY_5^2*YY_6+21*YY_1*YY_6^2+6*YY_2*YY_6^2-37* YY_3*YY_6^2-6*YY_4*YY_6^2-18*YY_5*YY_6^2+30*YY_6^3-42*YY_2*YY_5*YY_7+19*YY _4*YY_5*YY_7+47*YY_5^2*YY_7+11*YY_1*YY_6*YY_7+24*YY_2*YY_6*YY_7+20*YY_3*YY _6*YY_7+37*YY_4*YY_6*YY_7-17*YY_5*YY_6*YY_7-37*YY_6^2*YY_7+46*YY_4*YY_7^2- YY_5*YY_7^2+34*YY_6*YY_7^2,YY_3^3+43*YY_1*YY_3*YY_6-18*YY_2*YY_3*YY_6-19* YY_3^2*YY_6-28*YY_2*YY_5*YY_6-30*YY_4*YY_5*YY_6-14*YY_5^2*YY_6+35*YY_1*YY_ 6^2+47*YY_3*YY_6^2-24*YY_4*YY_6^2-17*YY_5*YY_6^2+18*YY_6^3-2*YY_1*YY_3*YY_ 7+25*YY_2*YY_3*YY_7+6*YY_3^2*YY_7+41*YY_2*YY_5*YY_7+24*YY_4*YY_5*YY_7+47* YY_5^2*YY_7-22*YY_1*YY_6*YY_7+39*YY_2*YY_6*YY_7-48*YY_3*YY_6*YY_7+19*YY_4* YY_6*YY_7+4*YY_5*YY_6*YY_7-24*YY_6^2*YY_7-19*YY_1*YY_7^2+13*YY_2*YY_7^2+10 *YY_3*YY_7^2-28*YY_4*YY_7^2-16*YY_5*YY_7^2+31*YY_6*YY_7^2+9*YY_7^3,YY_2*YY _3^2+27*YY_1*YY_3*YY_6-21*YY_2*YY_3*YY_6+40*YY_3^2*YY_6+26*YY_2*YY_5*YY_6+ 29*YY_4*YY_5*YY_6+46*YY_5^2*YY_6-21*YY_1*YY_6^2-24*YY_2*YY_6^2+28*YY_3*YY_ 6^2+YY_4*YY_6^2+27*YY_5*YY_6^2+47*YY_6^3+YY_1*YY_3*YY_7+20*YY_2*YY_3*YY_7- 23*YY_3^2*YY_7-2*YY_2*YY_5*YY_7+46*YY_5^2*YY_7+23*YY_1*YY_6*YY_7+42*YY_2* YY_6*YY_7+38*YY_3*YY_6*YY_7+2*YY_4*YY_6*YY_7+16*YY_5*YY_6*YY_7-39*YY_6^2* YY_7+18*YY_1*YY_7^2-28*YY_2*YY_7^2+32*YY_3*YY_7^2+42*YY_4*YY_7^2+7*YY_5*YY _7^2-49*YY_6*YY_7^2-50*YY_7^3,YY_1*YY_3^2+47*YY_1*YY_3*YY_6+29*YY_2*YY_3* YY_6+21*YY_3^2*YY_6-31*YY_2*YY_5*YY_6-48*YY_4*YY_5*YY_6-3*YY_5^2*YY_6+8*YY _1*YY_6^2+29*YY_2*YY_6^2+46*YY_3*YY_6^2-7*YY_4*YY_6^2+27*YY_5*YY_6^2-23*YY _6^3+27*YY_1*YY_3*YY_7+50*YY_2*YY_3*YY_7+3*YY_3^2*YY_7+8*YY_2*YY_5*YY_7+18 *YY_4*YY_5*YY_7-36*YY_5^2*YY_7-19*YY_1*YY_6*YY_7-39*YY_2*YY_6*YY_7-32*YY_3 *YY_6*YY_7-33*YY_4*YY_6*YY_7+44*YY_5*YY_6*YY_7+26*YY_6^2*YY_7-12*YY_1*YY_7 ^2-28*YY_2*YY_7^2+48*YY_3*YY_7^2-3*YY_4*YY_7^2-41*YY_5*YY_7^2-35*YY_6*YY_7 ^2-18*YY_7^3);


 jac = matrix {{0, YY_5-48*YY_6, 11*YY_6, -YY_6, -48*YY_6, YY_4-14*YY_6,  31*YY_3+14*YY_6+47*YY_7, YY_2+23*YY_3+6*YY_6-7*YY_7,  2*YY_1+21*YY_3-11*YY_6-44*YY_7, 10*YY_3*YY_6-21*YY_6^2+33*YY_6*YY_7,  -50*YY_3*YY_6-36*YY_6^2-16*YY_6*YY_7, 21*YY_6^2+11*YY_6*YY_7,  43*YY_3*YY_6+35*YY_6^2-2*YY_3*YY_7-22*YY_6*YY_7-19*YY_7^2,  27*YY_3*YY_6-21*YY_6^2+YY_3*YY_7+23*YY_6*YY_7+18*YY_7^2,  YY_3^2+47*YY_3*YY_6+8*YY_6^2+27*YY_3*YY_7-19*YY_6*YY_7-12*YY_7^2}, {-YY_6,  14*YY_5-44*YY_6, -42*YY_5+24*YY_6, 0, YY_4+14*YY_5-44*YY_6,  -50*YY_5-3*YY_6, 2*YY_2-15*YY_3+21*YY_5-39*YY_6-12*YY_7,  YY_1-36*YY_3+8*YY_5+32*YY_6-4*YY_7, -46*YY_3-33*YY_5+40*YY_6-10*YY_7,  -11*YY_5*YY_6-6*YY_6^2+36*YY_5*YY_7-45*YY_6*YY_7,  -9*YY_3*YY_6-3*YY_5*YY_6-31*YY_6^2-25*YY_5*YY_7+5*YY_6*YY_7,  YY_5^2-39*YY_5*YY_6+6*YY_6^2-42*YY_5*YY_7+24*YY_6*YY_7,  -18*YY_3*YY_6-28*YY_5*YY_6+25*YY_3*YY_7+41*YY_5*YY_7+39*YY_6*YY_7+13*YY_7^  2, YY_3^2-21*YY_3*YY_6+26*YY_5*YY_6-24*YY_6^2+20*YY_3*YY_7-2*YY_5*YY_7+42*  YY_6*YY_7-28*YY_7^2, 29*YY_3*YY_6-31*YY_5*YY_6+29*YY_6^2+50*YY_3*YY_7+8*YY  _5*YY_7-39*YY_6*YY_7-28*YY_7^2}, {YY_5, 19*YY_6, 20*YY_6, YY_4, 19*YY_6,  30*YY_6, 31*YY_1-15*YY_2-25*YY_3+26*YY_6+4*YY_7,  23*YY_1-36*YY_2-16*YY_3+16*YY_6-41*YY_7,  21*YY_1-46*YY_2+22*YY_3+23*YY_6-42*YY_7,  10*YY_1*YY_6+40*YY_3*YY_6+18*YY_6^2+3*YY_6*YY_7,  -50*YY_1*YY_6-9*YY_2*YY_6+3*YY_3*YY_6+33*YY_6^2+25*YY_6*YY_7,  -37*YY_6^2+20*YY_6*YY_7,  3*YY_3^2+43*YY_1*YY_6-18*YY_2*YY_6-38*YY_3*YY_6+47*YY_6^2-2*YY_1*YY_7+25*  YY_2*YY_7+12*YY_3*YY_7-48*YY_6*YY_7+10*YY_7^2,  2*YY_2*YY_3+27*YY_1*YY_6-21*YY_2*YY_6-21*YY_3*YY_6+28*YY_6^2+YY_1*YY_7+20*  YY_2*YY_7-46*YY_3*YY_7+38*YY_6*YY_7+32*YY_7^2,  2*YY_1*YY_3+47*YY_1*YY_6+29*YY_2*YY_6+42*YY_3*YY_6+46*YY_6^2+27*YY_1*YY_7+  50*YY_2*YY_7+6*YY_3*YY_7-32*YY_6*YY_7+48*YY_7^2}, {0, 45*YY_7,  2*YY_4+5*YY_5-34*YY_6+46*YY_7, YY_3, YY_2+45*YY_7,  YY_1-YY_5+44*YY_6+30*YY_7, 12*YY_5-23*YY_6-30*YY_7,  34*YY_5+19*YY_6+16*YY_7, -6*YY_5-39*YY_6-41*YY_7,  -38*YY_5*YY_6+47*YY_6^2-29*YY_5*YY_7-48*YY_6*YY_7-20*YY_7^2,  YY_5^2+24*YY_5*YY_6+18*YY_6^2+40*YY_5*YY_7-4*YY_6*YY_7-8*YY_7^2,  -6*YY_6^2+19*YY_5*YY_7+37*YY_6*YY_7+46*YY_7^2,  -30*YY_5*YY_6-24*YY_6^2+24*YY_5*YY_7+19*YY_6*YY_7-28*YY_7^2,  29*YY_5*YY_6+YY_6^2+2*YY_6*YY_7+42*YY_7^2,  -48*YY_5*YY_6-7*YY_6^2+18*YY_5*YY_7-33*YY_6*YY_7-3*YY_7^2}, {YY_3,  YY_1+14*YY_2-2*YY_5-9*YY_6+30*YY_7, -42*YY_2+5*YY_4-7*YY_5+YY_6-YY_7, 0,  14*YY_2-2*YY_5-9*YY_6+30*YY_7, -50*YY_2-YY_4+28*YY_5+14*YY_6-16*YY_7,  21*YY_2+12*YY_4-14*YY_5-32*YY_6+8*YY_7,  8*YY_2+34*YY_4-6*YY_5+44*YY_6-11*YY_7,  -33*YY_2-6*YY_4+5*YY_5+7*YY_6+26*YY_7,  3*YY_5^2-11*YY_2*YY_6-38*YY_4*YY_6-11*YY_5*YY_6-27*YY_6^2+36*YY_2*YY_7-29*  YY_4*YY_7-8*YY_5*YY_7+14*YY_6*YY_7-48*YY_7^2,  2*YY_4*YY_5-3*YY_2*YY_6+24*YY_4*YY_6-34*YY_5*YY_6-13*YY_6^2-25*YY_2*YY_7+  40*YY_4*YY_7-30*YY_5*YY_7+46*YY_6*YY_7+2*YY_7^2,  2*YY_2*YY_5-39*YY_2*YY_6-14*YY_5*YY_6-18*YY_6^2-42*YY_2*YY_7+19*YY_4*YY_7-  7*YY_5*YY_7-17*YY_6*YY_7-YY_7^2,  -28*YY_2*YY_6-30*YY_4*YY_6-28*YY_5*YY_6-17*YY_6^2+41*YY_2*YY_7+24*YY_4*YY_  7-7*YY_5*YY_7+4*YY_6*YY_7-16*YY_7^2,  26*YY_2*YY_6+29*YY_4*YY_6-9*YY_5*YY_6+27*YY_6^2-2*YY_2*YY_7-9*YY_5*YY_7+16  *YY_6*YY_7+7*YY_7^2, -31*YY_2*YY_6-48*YY_4*YY_6-6*YY_5*YY_6+27*YY_6^2+8*YY  _2*YY_7+18*YY_4*YY_7+29*YY_5*YY_7+44*YY_6*YY_7-41*YY_7^2}, {-YY_2,  -48*YY_1-44*YY_2+19*YY_3-9*YY_5-48*YY_6+15*YY_7,  11*YY_1+24*YY_2+20*YY_3-34*YY_4+YY_5-15*YY_6+34*YY_7, -YY_1,  -48*YY_1-44*YY_2+19*YY_3-9*YY_5-48*YY_6+15*YY_7,  -14*YY_1-3*YY_2+30*YY_3+44*YY_4+14*YY_5+34*YY_6-40*YY_7,  14*YY_1-39*YY_2+26*YY_3-23*YY_4-32*YY_5+48*YY_6-16*YY_7,  6*YY_1+32*YY_2+16*YY_3+19*YY_4+44*YY_5+35*YY_6+22*YY_7,  -11*YY_1+40*YY_2+23*YY_3-39*YY_4+7*YY_5+29*YY_6+23*YY_7,  10*YY_1*YY_3+20*YY_3^2-11*YY_2*YY_5-38*YY_4*YY_5+45*YY_5^2-42*YY_1*YY_6-12  *YY_2*YY_6+36*YY_3*YY_6-7*YY_4*YY_6+47*YY_5*YY_6-46*YY_6^2+33*YY_1*YY_7-45  *YY_2*YY_7+3*YY_3*YY_7-48*YY_4*YY_7+14*YY_5*YY_7-20*YY_6*YY_7+16*YY_7^2,  -50*YY_1*YY_3-9*YY_2*YY_3-49*YY_3^2-3*YY_2*YY_5+24*YY_4*YY_5-17*YY_5^2+29*  YY_1*YY_6+39*YY_2*YY_6-35*YY_3*YY_6+36*YY_4*YY_6-26*YY_5*YY_6+3*YY_6^2-16*  YY_1*YY_7+5*YY_2*YY_7+25*YY_3*YY_7-4*YY_4*YY_7+46*YY_5*YY_7-6*YY_6*YY_7-46  *YY_7^2, -39*YY_2*YY_5-7*YY_5^2+42*YY_1*YY_6+12*YY_2*YY_6+27*YY_3*YY_6-12*  YY_4*YY_6-36*YY_5*YY_6-11*YY_6^2+11*YY_1*YY_7+24*YY_2*YY_7+20*YY_3*YY_7+37  *YY_4*YY_7-17*YY_5*YY_7+27*YY_6*YY_7+34*YY_7^2,  43*YY_1*YY_3-18*YY_2*YY_3-19*YY_3^2-28*YY_2*YY_5-30*YY_4*YY_5-14*YY_5^2-31  *YY_1*YY_6-7*YY_3*YY_6-48*YY_4*YY_6-34*YY_5*YY_6-47*YY_6^2-22*YY_1*YY_7+39  *YY_2*YY_7-48*YY_3*YY_7+19*YY_4*YY_7+4*YY_5*YY_7-48*YY_6*YY_7+31*YY_7^2,  27*YY_1*YY_3-21*YY_2*YY_3+40*YY_3^2+26*YY_2*YY_5+29*YY_4*YY_5+46*YY_5^2-42  *YY_1*YY_6-48*YY_2*YY_6-45*YY_3*YY_6+2*YY_4*YY_6-47*YY_5*YY_6+40*YY_6^2+23  *YY_1*YY_7+42*YY_2*YY_7+38*YY_3*YY_7+2*YY_4*YY_7+16*YY_5*YY_7+23*YY_6*YY_7  -49*YY_7^2, 47*YY_1*YY_3+29*YY_2*YY_3+21*YY_3^2-31*YY_2*YY_5-48*YY_4*YY_5-  3*YY_5^2+16*YY_1*YY_6-43*YY_2*YY_6-9*YY_3*YY_6-14*YY_4*YY_6-47*YY_5*YY_6+  32*YY_6^2-19*YY_1*YY_7-39*YY_2*YY_7-32*YY_3*YY_7-33*YY_4*YY_7+44*YY_5*YY_7  -49*YY_6*YY_7-35*YY_7^2}, {0, 45*YY_4+30*YY_5+15*YY_6,  46*YY_4-YY_5+34*YY_6, 0, 45*YY_4+30*YY_5+15*YY_6, 30*YY_4-16*YY_5-40*YY_6,  47*YY_1-12*YY_2+4*YY_3-30*YY_4+8*YY_5-16*YY_6,  -7*YY_1-4*YY_2-41*YY_3+16*YY_4-11*YY_5+22*YY_6,  -44*YY_1-10*YY_2-42*YY_3-41*YY_4+26*YY_5+23*YY_6,  36*YY_2*YY_5-29*YY_4*YY_5-4*YY_5^2+33*YY_1*YY_6-45*YY_2*YY_6+3*YY_3*YY_6-  48*YY_4*YY_6+14*YY_5*YY_6-10*YY_6^2-40*YY_4*YY_7+5*YY_5*YY_7+32*YY_6*YY_7,  -25*YY_2*YY_5+40*YY_4*YY_5-15*YY_5^2-16*YY_1*YY_6+5*YY_2*YY_6+25*YY_3*YY_6  -4*YY_4*YY_6+46*YY_5*YY_6-3*YY_6^2-16*YY_4*YY_7+4*YY_5*YY_7+9*YY_6*YY_7,  -42*YY_2*YY_5+19*YY_4*YY_5+47*YY_5^2+11*YY_1*YY_6+24*YY_2*YY_6+20*YY_3*YY_  6+37*YY_4*YY_6-17*YY_5*YY_6-37*YY_6^2-9*YY_4*YY_7-2*YY_5*YY_7-33*YY_6*YY_7  , -2*YY_1*YY_3+25*YY_2*YY_3+6*YY_3^2+41*YY_2*YY_5+24*YY_4*YY_5+47*YY_5^2-  22*YY_1*YY_6+39*YY_2*YY_6-48*YY_3*YY_6+19*YY_4*YY_6+4*YY_5*YY_6-24*YY_6^2-  38*YY_1*YY_7+26*YY_2*YY_7+20*YY_3*YY_7+45*YY_4*YY_7-32*YY_5*YY_7-39*YY_6*  YY_7+27*YY_7^2, YY_1*YY_3+20*YY_2*YY_3-23*YY_3^2-2*YY_2*YY_5+46*YY_5^2+23*  YY_1*YY_6+42*YY_2*YY_6+38*YY_3*YY_6+2*YY_4*YY_6+16*YY_5*YY_6-39*YY_6^2+36*  YY_1*YY_7+45*YY_2*YY_7-37*YY_3*YY_7-17*YY_4*YY_7+14*YY_5*YY_7+3*YY_6*YY_7-  49*YY_7^2, 27*YY_1*YY_3+50*YY_2*YY_3+3*YY_3^2+8*YY_2*YY_5+18*YY_4*YY_5-36*  YY_5^2-19*YY_1*YY_6-39*YY_2*YY_6-32*YY_3*YY_6-33*YY_4*YY_6+44*YY_5*YY_6+26  *YY_6^2-24*YY_1*YY_7+45*YY_2*YY_7-5*YY_3*YY_7-6*YY_4*YY_7+19*YY_5*YY_7+31*  YY_6*YY_7+47*YY_7^2}};


---------------------------
--------Example 6----------
---------------------------

T = (ZZ/101)[YY_1, YY_2, YY_3, YY_4, YY_5];

J = ideal(YY_2*YY_3+3*YY_3^2+43*YY_1*YY_4+YY_3*YY_4-43*YY_2*YY_5+50*YY_3*YY_5,YY_2^2-18*YY_3^2+YY_1*YY_4-18*YY_2*YY_4-39*YY_3*YY_4-YY_1*YY_5+8*YY_2*YY_5-47*YY_3*YY_5,YY_1^2+16*YY_1*YY_2-3*YY_1*YY_3-32*YY_3^2+23*YY_1*YY_4-42*YY_2*YY_4-43*YY_3*YY_4+19*YY_1*YY_5+20*YY_2*YY_5-34*YY_3*YY_5,YY_3^3+16*YY_1*YY_2*YY_4+8*YY_1*YY_3*YY_4-36*YY_3^2*YY_4-YY_1*YY_4^2-47*YY_3*YY_4^2+45*YY_1*YY_3*YY_5-31*YY_3^2*YY_5+7*YY_1*YY_4*YY_5+16*YY_2*YY_4*YY_5+37*YY_3*YY_4*YY_5-16*YY_1*YY_5^2+36*YY_2*YY_5^2+15*YY_3*YY_5^2,YY_1*YY_3^2-48*YY_1*YY_2*YY_4+21*YY_1*YY_3*YY_4-45*YY_3^2*YY_4+47*YY_1*YY_4^2+10*YY_2*YY_4^2-47*YY_3*YY_4^2+13*YY_4^3-25*YY_1*YY_2*YY_5-33*YY_1*YY_3*YY_5+45*YY_3^2*YY_5+24*YY_1*YY_4*YY_5-36*YY_2*YY_4*YY_5-41*YY_3*YY_4*YY_5+26*YY_4^2*YY_5-27*YY_1*YY_5^2+30*YY_2*YY_5^2-13*YY_3*YY_5^2-24*YY_4*YY_5^2-17*YY_5^3);

jac = matrix {{43*YY_4, YY_4-YY_5, 2*YY_1+16*YY_2-3*YY_3+23*YY_4+19*YY_5, 16*YY_2*YY_4+8*YY_3*YY_4-YY_4^2+45*YY_3*YY_5+7*YY_4*YY_5-16*YY_5^2,YY_3^2-48*YY_2*YY_4+21*YY_3*YY_4+47*YY_4^2-25*YY_2*YY_5-33*YY_3*YY_5+24*YY_4*YY_5-27*YY_5^2}, {YY_3-43*YY_5, 2*YY_2-18*YY_4+8*YY_5,16*YY_1-42*YY_4+20*YY_5, 16*YY_1*YY_4+16*YY_4*YY_5+36*YY_5^2, -48*YY_1*YY_4+10*YY_4^2-25*YY_1*YY_5-36*YY_4*YY_5+30*YY_5^2},{YY_2+6*YY_3+YY_4+50*YY_5, -36*YY_3-39*YY_4-47*YY_5, -3*YY_1+37*YY_3-43*YY_4-34*YY_5,3*YY_3^2+8*YY_1*YY_4+29*YY_3*YY_4-47*YY_4^2+45*YY_1*YY_5+39*YY_3*YY_5+37*YY_4*YY_5+15*YY_5^2,2*YY_1*YY_3+21*YY_1*YY_4+11*YY_3*YY_4-47*YY_4^2-33*YY_1*YY_5-11*YY_3*YY_5-41*YY_4*YY_5-13*YY_5^2}, {43*YY_1+YY_3, YY_1-18*YY_2-39*YY_3,23*YY_1-42*YY_2-43*YY_3, 16*YY_1*YY_2+8*YY_1*YY_3-36*YY_3^2-2*YY_1*YY_4+7*YY_3*YY_4+7*YY_1*YY_5+16*YY_2*YY_5+37*YY_3*YY_5,-48*YY_1*YY_2+21*YY_1*YY_3-45*YY_3^2-7*YY_1*YY_4+20*YY_2*YY_4+7*YY_3*YY_4+39*YY_4^2+24*YY_1*YY_5-36*YY_2*YY_5-41*YY_3*YY_5-49*YY_4*YY_5-24*YY_5^2}, {-43*YY_2+50*YY_3, -YY_1+8*YY_2-47*YY_3, 19*YY_1+20*YY_2-34*YY_3,45*YY_1*YY_3-31*YY_3^2+7*YY_1*YY_4+16*YY_2*YY_4+37*YY_3*YY_4-32*YY_1*YY_5-29*YY_2*YY_5+30*YY_3*YY_5,-25*YY_1*YY_2-33*YY_1*YY_3+45*YY_3^2+24*YY_1*YY_4-36*YY_2*YY_4-41*YY_3*YY_4+26*YY_4^2+47*YY_1*YY_5-41*YY_2*YY_5-26*YY_3*YY_5-48*YY_4*YY_5+50*YY_5^2}}
